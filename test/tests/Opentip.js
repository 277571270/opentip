// Generated by CoffeeScript 1.3.3

describe("Opentip", function() {
  describe("debug()", function() {
    var consoleDebug;
    consoleDebug = console.debug;
    beforeEach(function() {
      return sinon.stub(console, "debug");
    });
    afterEach(function() {
      return console.debug.restore();
    });
    return it("should only debug when debugging == true", function() {
      Opentip.debugging = false;
      Opentip.debug("test");
      expect(console.debug.called).to.be["false"];
      Opentip.debugging = true;
      Opentip.debug("test");
      return expect(console.debug.called).to.be["true"];
    });
  });
  describe("sanitizePosition()", function() {
    return it("should properly parse all 8 possible positions", function() {
      expect(Opentip.sanitizePosition(["center", "top"])).to.equal(Opentip.position.top);
      expect(Opentip.sanitizePosition(["right", "top"])).to.equal(Opentip.position.topRight);
      expect(Opentip.sanitizePosition(["right", "middle"])).to.equal(Opentip.position.right);
      expect(Opentip.sanitizePosition(["right", "bottom"])).to.equal(Opentip.position.bottomRight);
      expect(Opentip.sanitizePosition(["center", "bottom"])).to.equal(Opentip.position.bottom);
      expect(Opentip.sanitizePosition(["left", "bottom"])).to.equal(Opentip.position.bottomLeft);
      expect(Opentip.sanitizePosition(["left", "middle"])).to.equal(Opentip.position.left);
      return expect(Opentip.sanitizePosition(["left", "top"])).to.equal(Opentip.position.topLeft);
    });
  });
  return describe("ucfirst()", function() {
    return it("should transform the first character to uppercase", function() {
      return expect(Opentip.ucfirst("abc def")).to.equal("Abc def");
    });
  });
});
