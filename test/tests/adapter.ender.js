// Generated by CoffeeScript 1.3.3
var $, bean;

$ = ender;

bean = require("bean");

describe("Ender adapter", function() {
  var adapter;
  adapter = Opentip.adapters.ender;
  return describe("DOM", function() {
    describe("create()", function() {
      return it("should properly create DOM elements from string", function() {
        var elements;
        elements = adapter.create("<div class=\"test\"><span>HI</span></div>");
        expect(elements).to.be.an("object");
        expect(elements.length).to.equal(1);
        return expect(elements[0].className).to.equal("test");
      });
    });
    describe("wrap()", function() {
      return it("should return a bonzo element", function() {
        var element, wrapped;
        element = document.createElement("div");
        wrapped = adapter.wrap(element);
        expect(element).to.not.equal(wrapped);
        return expect(element).to.equal(wrapped.get(0));
      });
    });
    describe("tagName()", function() {
      it("should return the tagName of passed native element", function() {
        var element;
        element = document.createElement("div");
        return expect(adapter.tagName(element)).to.equal("DIV");
      });
      return it("should return the tagName of passed ender element", function() {
        var element;
        element = $("div");
        return expect(adapter.tagName(element)).to.equal("DIV");
      });
    });
    describe("attr()", function() {
      it("should return the attribute of passed native element", function() {
        var element;
        element = document.createElement("a");
        element.setAttribute("href", "http://link");
        return expect(adapter.attr(element, "href")).to.equal("http://link");
      });
      return it("should return the attribute of passed ender element", function() {
        var element;
        element = $("<a href=\"http://link\"></a>");
        return expect(adapter.attr(element, "href")).to.equal("http://link");
      });
    });
    return describe("observe()", function() {
      it("should observe given event on native element", function(done) {
        var element;
        element = document.createElement("a");
        adapter.observe(element, "click", function() {
          return done();
        });
        return element.click();
      });
      it("should observe given event on ender element", function(done) {
        var element;
        element = $("<a>link</a>");
        adapter.observe(element, "click", function() {
          return done();
        });
        return element.get(0).click();
      });
      return it("should handle stopPropagation");
    });
  });
});
