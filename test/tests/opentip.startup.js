// Generated by CoffeeScript 1.3.3
var $,
  __hasProp = {}.hasOwnProperty;

$ = ender;

describe("Opentip - Startup", function() {
  var adapter, opentip;
  adapter = Opentip.adapters["native"];
  opentip = null;
  beforeEach(function() {
    return Opentip.adapter = adapter;
  });
  afterEach(function() {
    var prop, _ref;
    for (prop in opentip) {
      if (!__hasProp.call(opentip, prop)) continue;
      if ((_ref = opentip[prop]) != null) {
        if (typeof _ref.restore === "function") {
          _ref.restore();
        }
      }
    }
    if (opentip != null) {
      if (typeof opentip.deactivate === "function") {
        opentip.deactivate();
      }
    }
    $("[data-ot]").remove();
    return $(".opentip-container").remove();
  });
  it("should find all elements with data-ot()", function() {
    var trigger;
    trigger = $("<div data-ot=\"Content text\"></div>").get(0);
    $(document.body).append(trigger);
    Opentip.findElements();
    expect(adapter.data(trigger, "opentips")).to.be.an(Array);
    expect(adapter.data(trigger, "opentips").length).to.equal(1);
    return expect(adapter.data(trigger, "opentips")[0]).to.be.an(Opentip);
  });
  return it("should take configuration from data- attributes", function() {
    var trigger;
    trigger = $("<div data-ot=\"Content text\" data-ot-show-on=\"click\" data-ot-hide-trigger=\"closeButton\"></div>").get(0);
    $(document.body).append(trigger);
    Opentip.findElements();
    expect(adapter.data(trigger, "opentips")[0]).to.be.an(Opentip);
    opentip = adapter.data(trigger, "opentips")[0];
    expect(opentip.options.hideTrigger).to.eql("closeButton");
    return expect(opentip.options.showOn).to.eql("click");
  });
});
