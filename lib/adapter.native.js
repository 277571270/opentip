// Generated by CoffeeScript 1.3.3
var Adapter, adapter,
  __hasProp = {}.hasOwnProperty,
  __slice = [].slice;

Adapter = (function() {

  function Adapter() {}

  Adapter.prototype.domReady = function(callback) {
    return callback();
  };

  Adapter.prototype.create = function(htmlString) {
    var div;
    div = document.createElement("div");
    div.innerHTML = htmlString;
    return div.childNodes;
  };

  Adapter.prototype.wrap = function(element) {
    return element;
  };

  Adapter.prototype.tagName = function(element) {
    return element.tagName;
  };

  Adapter.prototype.attr = function(element, attr) {
    var result;
    return result = typeof element.getAttribute === "function" ? element.getAttribute(attr) : void 0;
  };

  Adapter.prototype.observe = function(element, eventName, observer, stopPropagation) {
    var obs;
    obs = function(e) {
      if (stopPropagation) {
        e.preventDefault();
        e.stopPropagation();
        e.stopped = true;
      }
      return observer.apply(this, arguments);
    };
    return element.addEventListener(eventName, obs);
  };

  Adapter.prototype.clone = function(object) {
    var key, newObject, val;
    newObject = {};
    for (key in object) {
      if (!__hasProp.call(object, key)) continue;
      val = object[key];
      newObject[key] = val;
    }
    return newObject;
  };

  Adapter.prototype.extend = function() {
    var key, source, sources, target, val, _i, _len;
    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    for (_i = 0, _len = sources.length; _i < _len; _i++) {
      source = sources[_i];
      for (key in source) {
        if (!__hasProp.call(source, key)) continue;
        val = source[key];
        target[key] = val;
      }
    }
    return target;
  };

  return Adapter;

})();

adapter = new Adapter;

Opentip.adapters["native"] = adapter;

Opentip.adapter = adapter;
